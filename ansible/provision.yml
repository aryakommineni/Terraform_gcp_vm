---
- name: Provision GCP VM with Terraform
  hosts: localhost
  gather_facts: no

  vars:
    vm_name: "{{ dialog_vm_name }}"
    project_id: "{{ dialog_project_id }}"
    region: "{{ dialog_region }}"
    zone: "{{ dialog_zone }}"
    machine_type: "{{ dialog_machine_type }}"
    credentials_file: "/var/lib/manageiq/keys/gcp-sa.json"

  tasks:
    - name: Ensure working directory exists
      file:
        path: /tmp/tf-gcp
        state: directory

    - name: Copy Terraform configuration (main.tf)
      copy:
        src: ../main.tf
        dest: /tmp/tf-gcp/main.tf

    - name: Copy Terraform configuration (variables.tf)
      copy:
        src: ../variables.tf
        dest: /tmp/tf-gcp/variables.tf

    - name: Copy Terraform configuration (outputs.tf)
      copy:
        src: ../outputs.tf
        dest: /tmp/tf-gcp/outputs.tf

    - name: Terraform init
      command: terraform init
      args:
        chdir: /tmp/tf-gcp

    - name: Terraform apply
      command: terraform apply -auto-approve -var "project_id={{ project_id }}" -var "region={{ region }}" -var "zone={{ zone }}" -var "vm_name={{ vm_name }}" -var "machine_type={{ machine_type }}" -var "credentials_file={{ credentials_file }}"
      args:
        chdir: /tmp/tf-gcp
